
create sprite trump{
    image: "./trump-small.png",
    pos_x: 100,
    pos_y: 200
};

create sprite wall1{
    image: "./brick-small.png",
    pos_x: 100,
    pos_y: 200,
    repeat_cols: 10,
    repeat_rows: 2
};

create sprite sombrero{
    image: "./sombrero-small.png",
    pos_x: 100,
    pos_y: 300
};

create sprite biden{
    image: "./biden-small.png",
    pos_x: 300,
    pos_y: 200
};


squared(X){
    X * X;
};

coincide(X, Y){
    X.pos_x == Y.pos_x and X.pos_y == Y.pos_y;
};

foo(X){
    X.pos_y == 300;
};




# when trump.pos_x > 1 then kill(trump);
# when is_down(keys.left_arrow) then trump.vel_x = -10;
# when is_up(keys.left_arrow) then trump.vel_x = 0;
# when trump.vel_x == 0 then print "trump stopped!";

assert squared(5) == 25;
# assert coincide(trump, burger);
assert not coincide(trump, sombrero);
assert trump.pos_x + 1 == 101;
assert true;
assert not false;
assert 1 != 2;


create client c1 {
    avatar: trump
};

create client c2 {
    avatar: biden
};

c1.keyboard.control = "down";
assert c1.keyboard.control == "down";
c1.keyboard.control = "up";
assert c1.keyboard.control == "up";

# delete sombrero;
# when c1.keyboard.ArrowRight == "down" then delete sombrero;

when c1.keyboard.ArrowRight == "down" then {
    c1.avatar.pos_x = c1.avatar.pos_x + 5;
    c1.avatar.pos_x = c1.avatar.pos_x + 5;
};

# when c1.keyboard.ArrowRight == "down" then c1.avatar.pos_x = c1.avatar.pos_x + 10;



when c1.keyboard.ArrowLeft == "down" then c1.avatar.pos_x = c1.avatar.pos_x - 10;


when c1.keyboard.ArrowUp == "down" then c1.avatar.pos_y = c1.avatar.pos_y - 10;
when c1.keyboard.ArrowDown == "down" then c1.avatar.pos_y = c1.avatar.pos_y + 10;


when c2.keyboard.ArrowRight == "down" then c2.avatar.pos_x = c2.avatar.pos_x + 10;
when c2.keyboard.ArrowLeft == "down" then c2.avatar.pos_x = c2.avatar.pos_x - 10;


# when true then trump.pos_x = trump.pos_x - 1;


find foo(X);

assert [1,2,3] == [1,2,3];


print "all right!";



# trump = sprite{
#     image: "./trump-small.png",
#     pos_x: 100,
#     pos_y: 200  
# };
